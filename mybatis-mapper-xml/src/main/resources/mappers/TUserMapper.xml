<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="club.javalearn.mybatis.mapper.TUserMapper">

    <resultMap id="BaseResultMap" type="TUser">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="note" property="note" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="SelectPositionMap" type="TUser" extends="BaseResultMap">
        <association property="position" javaType="TPosition" columnPrefix="posi_">
            <id column="id" property="id" />
            <result column="postName" property="postName"/>
            <result column="note" property="note" />
        </association>
    </resultMap>

    <resultMap id="SelectPositionMap2" type="TUser" extends="BaseResultMap">
        <association property="position" column="position_id" javaType="TPosition"  select="club.javalearn.mybatis.mapper.TPositionMapper.selectById">
        </association>
    </resultMap>

    <sql id="Base_Column_List" >
		id, user_name, real_name, sex, mobile, email, note,
		position_id
	</sql>

    <select id="selectById" resultMap="BaseResultMap"	parameterType="java.lang.Integer">
		select
			<include refid="Base_Column_List"/>
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</select>
    <select id="selectPosition1" resultMap="SelectPositionMap">
        select t.id, user_name, real_name, sex, mobile, email, t.note,p.id posi_id,p.post_name posi_postName,p.note posi_note
        from t_user t inner join t_position p on t.position_id = p.id
    </select>
    <select id="selectPosition2" resultMap="SelectPositionMap2">
        select u.id, u.user_name, u.real_name, u.sex,
               u.mobile, u.email, u.note,
		       u.position_id
        from t_user u
    </select>

    <select id="selectByUser" resultMap="BaseResultMap"	parameterType="TUser">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <trim prefix="where" prefixOverrides="and | or">
            <if test="userName !=null and userName != ''">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="realName !=null and realName != ''">
                and real_name like CONCAT('%',#{realName,jdbcType=VARCHAR},'%')
            </if>
        </trim>
    </select>

    <select id="selectByNameAndEmail" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByNameAndAge" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List"/>
        from t_user
        where user_name = #{name,jdbcType=VARCHAR}
        and age = #{age,jdbcType=INTEGER}
    </select>
    <select id="selectByNameAndNote" parameterType="club.javalearn.mybatis.vo.NameNoteBen" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where name = #{name,jdbcType=VARCHAR}
        and note = #{note,jdbcType=VARCHAR}
    </select>

    <!--Mybatis获取id时获取的是最大的id数+1，这样就不会造成主键冲突的问题
       1. insert 操作时，不需要在TUser中设置主键值
       2. insert 语句中，不用插入主键值
       3. 如果1.2都做了，那么就获取最大id数+1
       4. 注意适用在mysql。sql server 有自动增长的列
    -->
    <insert id="insert" parameterType="TUser" useGeneratedKeys="true" keyProperty="id">
        insert into t_user (<include refid="Base_Column_List"/>) values(
        id, userName, realName, sex, mobile, email, note,
        positionId
        )
    </insert>

    <!--使用useGeneratedKeys和keyProperty是对selectKey的简写,只适用mysql和SQL Server有自动增长列的数据:
        1. oracle中需要使用selectKey来获取主键值
        <selectKey keyProperty="id" order="BEFORE" resultType="int">
            select SEQ_ID.nextval from dual
        </selectKey>
        2. mysql中的useGeneratedKeys实际上是下面的代码:
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>
    -->
    <insert id="insert2" parameterType="TUser" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>
        insert into t_user (<include refid="Base_Column_List"/>) values(
        id, userName, realName, sex, mobile, email, note,
        positionId
        )
    </insert>


    <select id="findListBySymbol" resultMap="BaseResultMap">
        select ${inCol} from ${tableName} where sex = #{sex} order by ${orderStr}
    </select>


    <update id="update" parameterType="TUser">
        update t_user
            <trim prefix="set" suffixOverrides=",">
                <if test="realName !=null and realName != ''">
                    real_name = #{realName,jdbcType=VARCHAR},
                </if>
                <if test="userName !=null and userName != ''">
                    user_name = #{userName,jdbcType=VARCHAR},
                </if>
            </trim>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <resultMap id="selectJobs1" type="TUser" extends="BaseResultMap">
        <collection property="jobs" ofType="TJobHistory">
            <id column="b_id" property="id"/>
            <result column="user_id" property="userId"/>
            <result column="comp_name" property="compName" jdbcType="VARCHAR" />
            <result column="years" property="years" jdbcType="INTEGER" />
            <result column="title" property="title" jdbcType="VARCHAR" />
        </collection>
    </resultMap>

    <resultMap id="selectJobs2" type="TUser" extends="BaseResultMap">
        <collection property="jobs" fetchType="lazy" column="id"    select="club.javalearn.mybatis.mapper.TJobHistoryMapper.selectByUserId" />
    </resultMap>

    <select id="selectJobs1" resultMap="selectJobs1">
        select
		a.id,
		a.user_name,
		a.real_name,
		a.sex,
		a.mobile,
		a.email,
		a.note,
		b.id as b_id,
		b.user_id,
		b.comp_name,
		b.years,
		b.title
		from t_user a,
		t_job_history b
		where a.id = b.user_id
    </select>

    <select id="selectJobs2" resultMap="selectJobs2">
        select
		a.id,
		a.user_name,
		a.real_name,
		a.sex,
		a.mobile
		from t_user a
    </select>

</mapper>